name: CI/CD Pipeline
run-name: CI/CD Pipeline
description: |
  This workflow builds and tests the application, builds a Docker image, and deploys it to Render.
  It runs on pushes to the main branch and pull requests targeting the main branch.
  It also runs on version tags that start with 'v'.
  The workflow consists of three jobs:
  - `test`: Runs unit and integration tests.
  - `build-and-push`: Builds the Docker image and pushes it to Docker Hub.
  - `deploy`: Deploys the application to Render on pull requests.

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths:
      - 'Dockerfile'
      - 'pom.xml'
      - 'src/**'
      - '.github/workflows/**'      
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Dockerfile'
      - 'pom.xml'
      - 'src/**'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/camly

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up RSA keys
        run: |
          chmod +x rsa-keys.sh
          ./rsa-keys.sh

      - name: Run unit tests
        run: |
          ./mvnw test

      - name: Run integration tests
        run: |
          ./mvnw failsafe:integration-test

  build-and-push:
    needs: test
    name: Build and push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up RSA keys
        run: |
          chmod +x rsa-keys.sh
          ./rsa-keys.sh

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    name: Deploy to Render
    if: github.event_name != 'pull_request'

    steps:
      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        "[format_sql]": false
  flyway:
    enabled: true
    baseline-on-migrate: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      username: ${REDIS_USERNAME:}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:25}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    test-connection: false
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

logging:
  level:
    root: INFO
    "[andrehsvictor.camly]": DEBUG
    "[org.hibernate.SQL]": WARN
    "[org.springframework.security]": INFO

camly:
  server:
    url: ${SERVER_URL:https://api.example.com}
  jwt:
    rsa:
      public-key:
        location: ${JWT_PUBLIC_KEY_LOCATION:file:certs/public.pem}
      private-key:
        location: ${JWT_PRIVATE_KEY_LOCATION:file:certs/private.pem}
    access-token:
      lifespan: ${JWT_ACCESS_TOKEN_LIFESPAN:15m}
    refresh-token:
      lifespan: ${JWT_REFRESH_TOKEN_LIFESPAN:1h}
  action-token:
    email-verification:
      lifespan: ${EMAIL_VERIFICATION_TOKEN_LIFESPAN:24h}
    password-reset:
      lifespan: ${PASSWORD_RESET_TOKEN_LIFESPAN:1h}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PATCH,PUT,DELETE,OPTIONS}
  minio:
    endpoint: ${MINIO_ENDPOINT}
    admin:
      username: ${MINIO_USERNAME}
      password: ${MINIO_PASSWORD}
    bucket:
      name: ${MINIO_BUCKET_NAME:camly}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized